@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap');
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', sans-serif;
        }
        /* Testing css fades */
        @keyframes fadeIn {
            0% {
            opacity: 0;
            }
            100% {
            opacity: 1;
            }
        }
        
        .bgwrapper{
            background: linear-gradient( rgba(30, 31, 49, 0.7), rgba(0, 0, 0, 0.7) ), url('images/background.png') no-repeat center center/cover;
            color: #2b2830;
            display:flex
        }

        body {
            color: #312544;
            font-size: 1rem;
            display: grid;
            grid-template-areas:
            "header"
            "main"
            "footer";
        }
        
        .main {
            grid-column: main;
            padding: 1.25rem;
          }

          img {
            max-inline-size: 100%;
          }

          h1 {
            font-size: 1.75rem;
            line-height: 1.5;
            margin-block-end: 1rem;
          }
         


        /* Links class for testing the hover effect. */
        .links a {
            display: block;
            background: #333;
            color: #fff;
            text-decoration: none;
            padding: 12px 20px;
            margin: 5px 0;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 400;
            text-align: center;
            width: 120%;
        }
        @media (max-aspect-ratio: 1/1) {
            .container {
                animation: fadeIn 0.8s ease-in-out;
                flex-direction: column;
                height: auto;
                width: 50%;
                min-width:321px;
                padding: 30px;
            }
            .profile-img {
                margin-right: 0;
                margin-bottom: 20px;
            }

            .content {
                display: flex;
                flex-direction: column;
                align-items: center;
                width: 100%;
            }
            .portrait {
                width: auto;
                height: 19rem;
                border-radius: 12px;
                margin-right: 0;
                margin-bottom: 20px;
            }
                /* The fade-in animation */
        }

 /* Gallery Specific CSS */

 
.gallery {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(17.5rem, 1fr));
    grid-auto-rows: 12.5rem;
    grid-auto-flow: dense;
    gap: 0.75rem;
  }
  
  .gallery figure {
    /* container-type: inline-size; */
    container: figure / inline-size;
    overflow: hidden;
  
    display: grid;
    /* grid-template-columns: 1fr; */
    /* grid-template-rows: 1fr; */
  
    /*
      Because 1fr = minmax(auto, 1fr),
      to prevent the grid blowout,
      set the minimum to zero.
    */
    grid-template-columns: minmax(0, 1fr);
    grid-template-rows: minmax(0, 1fr);
  }
  
  .gallery img {
    inline-size: 100%;
    block-size: 100%;
    object-fit: cover;
  
    /* grid-row: 1 / -1; */
    /* grid-column: 1 / -1; */
    grid-area: 1 / 1 / -1 / -1;
  
    transition: scale 1s ease-in-out;
  }
  
  .gallery figure:hover img {
    scale: 1.125;
  }
  
  .gallery figcaption {
    grid-area: 1 / 1 / -1 / -1;
    align-self: end;
    z-index: 1;
  
    padding: 3em 15% 1em 1em;
    color: #fff;
    font-size: 0.875rem;
    line-height: 1.3;
    background: linear-gradient(transparent 25%, rgb(0 0 0 / 0.75));
    display: none;
  }
  
  @container figure (width > 20rem) {
    .gallery figcaption {
      display: block;
    }
  }
  
  .gallery figcaption h3 {
    font-size: 1.0625rem;
  }
  
  .gallery figcaption p {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  }
  
  @media (width > 600px) {
    .gallery figure:nth-child(1) {
      grid-area: span 2 / span 2;
    }
  
    .gallery figure:nth-child(4n + 1) {
      grid-row: span 2;
    }
  
    .gallery figure:nth-child(4n + 2) {
      grid-column: span 2;
    }
  }
  
